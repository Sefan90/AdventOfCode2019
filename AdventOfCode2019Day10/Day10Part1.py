from functools import reduce
import math
import operator

def FindAsteroids(cordlist,cord):
	tempList = []
	for c in cordlist:
		c[0] -= cord[0]
		c[1] -= cord[1]
	remove = []
	for c in cordlist:
		if c == [0,0]:
			continue
		elif c not in remove:
			temp = math.degrees(math.atan2(c[0],c[1]))
			remove.append([c,temp])
			for r in range(len(remove)-1):
				if remove[r][1] == temp:
					if math.sqrt(remove[r][0][0]**2+remove[r][0][1]**2) > math.sqrt(c[0]**2+c[1]**2):
						remove[r][0] = c
					remove.pop()
	
	#return len(remove) #Return for Part1
	return remove

def Part1():
	cords = []
	mostAsteroids = 0
	bestCords = []
	testcord = []
	best = [[0,0],0]
	#map =[".#..#",".....","#####","....#","...##"]
	#map = ["......#.#.","#..#.#....","..#######.",".#.#.###..",".#..#.....","..#....#.#","#..#....#.",".##.#..###","##...#..#.",".#....####"]
	#map = ["#.#...#.#.",".###....#.",".#....#...","##.#.#.#.#","....#.#.#.",".##..###.#","..#...##..","..##....##","......#...",".####.###."]
	#map = [".#..#..###","####.###.#","....###.#.","..###.##.#","##.##.#.#.","....###..#","..#.#..#.#","#..#.#.###",".##...##.#",".....#.#.."]
	#map = [".#..##.###...#######","##.############..##.",".#.######.########.#",".###.#######.####.#.","#####.##.#.##.###.##","..#####..#.#########","####################","#.####....###.#.#.##","##.#################","#####.##.###..####..","..######..##.#######","####.##.####...##..#",".#####..#.######.###","##...#.##########...","#.##########.#######",".####.#.###.###.#.##","....##.##.###..#####",".#.#.###########.###","#.#.#.#####.####.###","###.##.####.##.#..##"]
	map = [".#......##.#..#.......#####...#..","...#.....##......###....#.##.....","..#...#....#....#............###.",".....#......#.##......#.#..###.#.","#.#..........##.#.#...#.##.#.#.#.","..#.##.#...#.......#..##.......##","..#....#.....#..##.#..####.#.....","#.............#..#.........#.#...","........#.##..#..#..#.#.....#.#..",".........#...#..##......###.....#","##.#.###..#..#.#.....#.........#.",".#.###.##..##......#####..#..##..",".........#.......#.#......#......","..#...#...#...#.#....###.#.......","#..#.#....#...#.......#..#.#.##..","#.....##...#.###..#..#......#..##","...........#...#......#..#....#..","#.#.#......#....#..#.....##....##","..###...#.#.##..#...#.....#...#.#",".......#..##.#..#.............##.","..###........##.#................","###.#..#...#......###.#........#.",".......#....#.#.#..#..#....#..#..",".#...#..#...#......#....#.#..#...","#.#.........#.....#....#.#.#.....",".#....#......##.##....#........#.","....#..#..#...#..##.#.#......#.#.","..###.##.#.....#....#.#......#...","#.##...#............#..#.....#..#",".#....##....##...#......#........","...#...##...#.......#....##.#....",".#....#.#...#.#...##....#..##.#.#",".#.#....##.......#.....##.##.#.##"]
	for x in range(len(map)):
		for y in range(len(map[x])):
			if map[x][y] == "#":
				cords.append([y,x])
				testcord.append([y,x])
	counter = 0
	for c in cords:
		#print(c)
		cTemp = c.copy()
		ltemp = cords.copy()
		bestCords.append([testcord[counter],0])
		counter += 1
		temp = FindAsteroids(ltemp.copy(),cTemp.copy())
		bestCords[len(bestCords)-1][1]=temp
		if mostAsteroids < temp:
			mostAsteroids = temp
	for b in bestCords:
		if b[1] > best[1]:
			best = b
	for b in bestCords:
		if b[1] == best[1]:
			print(b)
	print(best)
	print(mostAsteroids)
	print(testcord)

def Part2():
	best = [29,28]
	best2 = (29,28) #Output from Part1
	cords = []
	degrList = []
	sortList = []
	degrSet = []
	inputMap = [".#......##.#..#.......#####...#..","...#.....##......###....#.##.....","..#...#....#....#............###.",".....#......#.##......#.#..###.#.","#.#..........##.#.#...#.##.#.#.#.","..#.##.#...#.......#..##.......##","..#....#.....#..##.#..####.#.....","#.............#..#.........#.#...","........#.##..#..#..#.#.....#.#..",".........#...#..##......###.....#","##.#.###..#..#.#.....#.........#.",".#.###.##..##......#####..#..##..",".........#.......#.#......#......","..#...#...#...#.#....###.#.......","#..#.#....#...#.......#..#.#.##..","#.....##...#.###..#..#......#..##","...........#...#......#..#....#..","#.#.#......#....#..#.....##....##","..###...#.#.##..#...#.....#...#.#",".......#..##.#..#.............##.","..###........##.#................","###.#..#...#......###.#........#.",".......#....#.#.#..#..#....#..#..",".#...#..#...#......#....#.#..#...","#.#.........#.....#....#.#.#.....",".#....#......##.##....#........#.","....#..#..#...#..##.#.#......#.#.","..###.##.#.....#....#.#......#...","#.##...#............#..#.....#..#",".#....##....##...#......#........","...#...##...#.......#....##.#....",".#....#.#...#.#...##....#..##.#.#",".#.#....##.......#.....##.##.#.##"]
	for x in range(len(inputMap)):
		for y in range(len(inputMap[x])):
			if inputMap[x][y] == "#":
				cords.append([y,x])
	degrList = FindAsteroids(cords,best)
	for item in degrList:
		item[0][0] += best[0]
		item[0][1] += best[1]
		tmpTuple = (item[0][0],item[0][1])
		degrSet.append((item[0][0],item[0][1]))
	sortList = sorted(degrSet, key=lambda degrSet: (90 + math.degrees(math.atan2(*tuple(map(operator.sub, degrSet, best2))[::-1]))) % 360)
	print(sortList)
	print((sortList[199][0])*100+sortList[199][1])
	print(sortList[199])

Part2()